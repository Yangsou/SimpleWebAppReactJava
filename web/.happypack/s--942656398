'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactRouter = require('react-router');

var _LinkUI = require('../../components/LinkUI');

var _LinkUI2 = _interopRequireDefault(_LinkUI);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ItemPost = function (_Component) {
  _inherits(ItemPost, _Component);

  function ItemPost() {
    _classCallCheck(this, ItemPost);

    return _possibleConstructorReturn(this, (ItemPost.__proto__ || Object.getPrototypeOf(ItemPost)).apply(this, arguments));
  }

  _createClass(ItemPost, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'div',
        { className: 'items padding padding-top-bottom col-xs-12 col-sm-10 col-md-8 col-lg-7' },
        _react2.default.createElement(
          'div',
          { className: 'items_head' },
          _react2.default.createElement(_LinkUI2.default, { label: this.props.postName,
            href: this.props.labelLink }),
          _react2.default.createElement(
            'div',
            { className: 'items_head_info' },
            _react2.default.createElement(
              'p',
              { className: 'auth' },
              'By: ',
              _react2.default.createElement(
                'i',
                null,
                this.props.userName
              )
            ),
            _react2.default.createElement(
              'p',
              { className: 'date' },
              this.props.postDate
            )
          )
        ),
        _react2.default.createElement('hr', { className: 'hr-clear' }),
        _react2.default.createElement(
          'div',
          { className: 'items_content' },
          _react2.default.createElement(
            'p',
            null,
            'Sed porttitor lectus nibh. Nulla quis lorem ut libero malesuada feugiat. Curabitur aliquet quam id dui posuere blandit. Curabitur aliquet quam id dui posuere blandit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur arcu erat, accumsan id imperdiet et, porttitor at sem.'
          ),
          _react2.default.createElement(
            _reactRouter.Link,
            { to: 'article/' + this.props.id,
              className: 'link-img-wrap', target: '_blank' },
            _react2.default.createElement('img', { src: this.props.image, className: 'img-responsive' })
          )
        )
      );
    }
  }]);

  return ItemPost;
}(_react.Component);

exports.default = ItemPost;