'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactRouter = require('react-router');

var _jquery = require('jquery');

var _jquery2 = _interopRequireDefault(_jquery);

var _cuid = require('cuid');

var _cuid2 = _interopRequireDefault(_cuid);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* 
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * To change this license header, choose License Headers in Project Properties.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * To change this template file, choose Tools | Templates
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * and open the template in the editor.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

var countDisplay = 4;
var example = [{
    id: (0, _cuid2.default)()
}, {
    id: (0, _cuid2.default)()
}, {
    id: (0, _cuid2.default)()
}, {
    id: (0, _cuid2.default)()
}, {
    id: (0, _cuid2.default)()
}, {
    id: (0, _cuid2.default)()
}, {
    id: (0, _cuid2.default)()
}, {
    id: (0, _cuid2.default)()
}, {
    id: (0, _cuid2.default)()
}];

var SlideListProduct = function (_Component) {
    _inherits(SlideListProduct, _Component);

    function SlideListProduct(props) {
        _classCallCheck(this, SlideListProduct);

        var _this = _possibleConstructorReturn(this, (SlideListProduct.__proto__ || Object.getPrototypeOf(SlideListProduct)).call(this, props));

        _this.state = {
            cuidSlider: null,
            sliderIndex: 0
        };
        return _this;
    }

    _createClass(SlideListProduct, [{
        key: 'componentWillMount',
        value: function componentWillMount() {
            this.setState({ cuidSlider: (0, _cuid2.default)() });
        }
    }, {
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            (0, _jquery2.default)(window).on('resize', function () {
                _this2.setState({ sliderIndex: 0 });
                _this2.sliderControl();
            });
            this.sliderControl();
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            (0, _jquery2.default)(window).off('resize', this.sliderControl);
        }
    }, {
        key: 'componentDidUpdate',
        value: function componentDidUpdate() {
            this.sliderControl();
        }
    }, {
        key: 'handleClickNext',
        value: function handleClickNext() {
            var sliderContainerWidth = this.refs.sliders.offsetWidth;
            var sliderItemWidth = this.refs.slider_wrap.offsetWidth / countDisplay;
            var _sliderIndex = this.state.sliderIndex;
            //        console.log('countDisplay', countDisplay);
            //        console.log('sliderContainerWidth', sliderContainerWidth);
            //        console.log('irm', this.refs.slider_wrap.offsetWidth);
            //        console.log('sliderItemWidth', sliderItemWidth);
            //        console.log('size', sliderContainerWidth / (sliderItemWidth * countDisplay));
            _sliderIndex++;
            if (_sliderIndex >= sliderContainerWidth / (sliderItemWidth * countDisplay)) this.setState({ sliderIndex: _sliderIndex - 1 });else this.setState({ sliderIndex: _sliderIndex });
        }
    }, {
        key: 'handleClickPrev',
        value: function handleClickPrev() {
            var _sliderIndex = this.state.sliderIndex;
            _sliderIndex--;
            if (_sliderIndex < 0) this.setState({ sliderIndex: 0 });else this.setState({ sliderIndex: _sliderIndex });
        }
    }, {
        key: 'sliderControl',
        value: function sliderControl() {
            if (typeof this.props.arrayProduct !== 'undefined') {
                if (window.innerWidth < 768) countDisplay = 2;
                if (window.innerWidth >= 768) countDisplay = 3;
                if (window.innerWidth >= 992) countDisplay = 4;
                if (window.innerWidth >= 1200) countDisplay = 5;
                var sliderWrap = (0, _jquery2.default)('.slider-wrap'),
                    sliderWrapWidth = sliderWrap.innerWidth(),
                    sliderContainer = (0, _jquery2.default)('.sliders'),
                    sliderItem = (0, _jquery2.default)('.slider'),
                    sliderItemWidth = sliderWrapWidth / countDisplay,
                    sliderContainerWidth = example.length * sliderItemWidth;
                sliderItem.css('width', sliderItemWidth), sliderContainer.css('width', sliderContainerWidth);
                //              console.log('sliderWrapWidth---', sliderItemWidth);
                this.refs.sliders.style.transform = 'translateX(-' + this.state.sliderIndex * sliderWrapWidth + 'px)';
            }
        }
    }, {
        key: 'render',
        value: function render() {
            //    console.log(this.props.arrayProduct);
            var arrayProduct = this.props.arrayProduct;
            return _react2.default.createElement(
                'div',
                { className: 'col-xs-12 lists-product' },
                typeof arrayProduct !== 'undefined' ? _react2.default.createElement(
                    'div',
                    { className: 'slider-wrap', ref: 'slider_wrap' },
                    _react2.default.createElement(
                        'div',
                        { id: this.state.cuidSlider, className: 'sliders', ref: 'sliders' },
                        arrayProduct.map(function (item) {
                            var priceDefault = parseInt(item.PriceDefault);
                            var priceCurrent = parseInt(item.PriceCurrent);

                            var perCent = ((priceDefault - priceCurrent) / priceDefault * 100).toFixed(2);
                            return _react2.default.createElement(
                                'div',
                                { ref: 'slider', className: 'slider item-product item-product-border' },
                                _react2.default.createElement(
                                    _reactRouter.Link,
                                    { to: 'watch/' + item.IdProduct, className: 'slider_link item_link-img' },
                                    _react2.default.createElement(
                                        'div',
                                        { className: 'img-wrap' },
                                        _react2.default.createElement('img', { src: 'assets/images/' + item.Image, className: 'slider_img img-responsive', alt: '' })
                                    )
                                ),
                                _react2.default.createElement(
                                    'div',
                                    { className: 'slider_link_text' },
                                    _react2.default.createElement(
                                        'a',
                                        { href: '#', className: 'item_link-text' },
                                        item.Name
                                    ),
                                    _react2.default.createElement(
                                        'p',
                                        { className: 'price bold price-current' },
                                        item.PriceCurrent,
                                        _react2.default.createElement(
                                            'span',
                                            { className: 'promotion red m-t-8' },
                                            perCent + '%'
                                        )
                                    )
                                )
                            );
                        })
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'sliders_group-btn' },
                        _react2.default.createElement(
                            'button',
                            { onClick: this.handleClickNext.bind(this), 'data-id': this.state.cuidSlider, className: 'slider_btn slider_btn-next btn' },
                            _react2.default.createElement('span', { className: 'icon icon-arrow-right' })
                        ),
                        _react2.default.createElement(
                            'button',
                            { onClick: this.handleClickPrev.bind(this), 'data-id': this.state.cuidSlider, className: 'slider_btn slider_btn-prev btn' },
                            _react2.default.createElement('span', { className: 'icon icon-arrow-left' })
                        )
                    )
                ) : ''
            );
        }
    }]);

    return SlideListProduct;
}(_react.Component);

exports.default = SlideListProduct;